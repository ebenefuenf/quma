[project]
name = "quma"
dynamic = ["version"]
description = "A SQL/database library"
keywords = ["sql", "database"]
authors = [
    {name = "ebene fÃ¼nf GmbH", email = "info@ebenefuenf.de"},
]
readme = {file = "README.rst", content-type = "text/x-rst"}
license = {file = "LICENSE.rst"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Database :: Front-Ends",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "coverage-conditional-plugin"]
docs = ["sphinx", "sphinx-autobuild"]
dev = ["ruff"]
templates = ["mako"]
postgres = [
    "psycopg2; implementation_name=='cpython'",
    "psycopg2cffi; implementation_name=='pypy'",
]
mysql = ["mysqlclient"]

[project.urls]
Homepage = "https://github.com/ebenefuenf/quma"
Issues = "https://github.com/ebenefuenf/quma/issues"
Documentation = "https://quma.readthedocs.io"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "quma"

[tool.flit.sdist]
include = ["docs/", "CHANGES.rst", "tox.ini"]
exclude = ["docs/_build/"]

[tool.pytest.ini_options]
addopts = "--verbose -s"
markers = ["mysql", "postgres"]
testpaths = ["quma/tests"]

[tool.coverage.run]
branch = true
source = ["quma"]
plugins = ["coverage_conditional_plugin"]

[tool.coverage.report]
show_missing = true
exclude_also = [
    "pragma: no-cover",
    "raise NotImplementedError",
    "except ImportError",
]

[tool.coverage.coverage_conditional_plugin.rules]
no-cov-pypy = "implementation_name == 'pypy'"
no-cov-cpython = "implementation_name == 'cpython'"

[tool.ruff]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".ipynb_checkpoints",
    ".mypy_cache", ".nox", ".pants.d", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache",
    ".svn", ".tox", ".venv", ".vscode", "__pypackages__", "_build", "buck-out",
    "build", "dist", "node_modules", "site-packages", "venv",
]
line-length = 79
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
extend-select = ["B", "Q", "I", "C90", "W"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["B018"] # Ignore useless expression error in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
